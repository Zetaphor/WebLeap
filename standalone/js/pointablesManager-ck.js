/* 
 * PointablesManager.js
 * 
 * This class manages all the points that come in off the JSON
 * params: a Screen properties Object defined in screenProperties.js
 *///Pointable management class
function PointablesManager(e,t){this.pointableCount=0;this.activePointableCache=new Array;this.stalePointables=null;this.screenProperties=e;this.collidableManager=t}PointablesManager.prototype={processPointables:function(e){if(typeof e!="undefined"){this.pointableCount=e.length;var t=new Array;for(var n=0;n<e.length;n++){this.updatePointable(e[n])==0&&this.addPointable(e[n]);t.push("pointable"+e[n].id)}var r=new Array;for(var i=0;i<this.activePointableCache.length;i++)t.indexOf(this.activePointableCache[i].attr("id"))==-1&&r.push(this.activePointableCache[i]);for(var i=0;i<r.length;i++)this.destroyPointable(r[i]);r=null;t=null}},addPointable:function(e){var t="pointable"+e.id,n=$("<div class='pointable' id='"+t+"'>&nbsp;</div>");n.css("left",e.tipPosition[0]+"mm").css("bottom",e.tipPosition[1]+"mm");this.screenProperties.xAxis.append(n);var r=!1;if(this.activePointableCache.length==0){n.addClass("mainPoint");r=!0}this.activePointableCache.push(n);this.collidableManager!=null&&this.collidableManager.findColliding(new Collidable(n),r);return},updatePointable:function(e){for(var t=0;t<this.activePointableCache.length;t++)if(this.activePointableCache[t].attr("id")=="pointable"+e.id){this.activePointableCache[t].css("left",e.tipPosition[0]+"mm").css("bottom",e.tipPosition[1]+"mm");this.collidableManager!=null&&this.collidableManager.findColliding(new Collidable(this.activePointableCache[t]),this.activePointableCache[t].hasClass("mainPoint"));return!0}return!1},destroyPointable:function(e){var t=e.hasClass("mainPoint"),n=this.activePointableCache.indexOf(e);this.activePointableCache.splice(n,1);e.remove();t&&this.activePointableCache.length>0&&this.activePointableCache[0].addClass("mainPoint")}};